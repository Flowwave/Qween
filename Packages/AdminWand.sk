command /adminwand:
    permission: admin 
    trigger:
        message "<##FF1122>[AdminWand] &8| &fAdminwand.sk adds the admin wand which can be obtained by pressing F when in creative, Press F again to swap between world edit and admin wand, the admin wand grants high fly speed and the world edit wand shows your WE selection box"

on load:
    if {adminWand} is not set:
        set {adminWand} to unbreakable golden axe named "<##FF1122>Admin Wand"
    if {worldEditWand} is not set:
        set {worldEditWand} to unbreakable wooden shovel named "&dWorld Edit Wand"


on offhand switch:
    if player's gamemode is creative:
        if player's tool is 0 air:
            if player's offhand tool is 0 air:
                cancel event
                set player's tool to {adminWand}
                play sound "entity.item.pickup" at pitch 0.8 to player
                stop
        else if player's tool is {adminWand}:
            set player's tool to {worldEditWand}
            play sound "minecraft:entity.experience_orb.pickup" at pitch 0.8 to player
            cancel event
        else if player's tool is {worldEditWand}:
            set player's tool to {adminWand}
            play sound "minecraft:entity.experience_orb.pickup" at pitch 0.6 to player
            cancel event
on every tick:
    loop all players:
        if loop-player's tool is {adminWand}:
            set the loop-player's fly speed to 1
        else: 
            if loop-player's fly speed is 1:
                set the loop-player's fly speed to 0.1

on leftclick:
    if player's tool is {worldEditWand}:
        if (event-block is set):
            set {_block} to event-block
        else:
            set {_block} to targeted block
        set {edit.corner1::%player%} to {_block}
        make player execute command "//pos1 %floor(x-pos of {_block})%,%floor(y-pos of {_block})%,%floor(z-pos of {_block})%"
        cancel event
        play sound "ui.button.click" at pitch 1.1 to player
        
on rightclick:
    if player's tool is {worldEditWand}:
        
        if (event-block is set):
            set {_block} to event-block
        else:
            set {_block} to targeted block
        set {edit.corner2::%player%} to {_block}
        
        make player execute command "//pos2 %floor(x-pos of {_block})%,%floor(y-pos of {_block})%,%floor(z-pos of {_block})%"
        cancel event
        play sound "ui.button.click" at pitch 1.1 to player

on every tick:
    loop all players:
        if loop-player's tool is {worldEditWand}: 
            set {_particle} to "minecraft:electric_spark"

            set {_c1} to {edit.corner1::%loop-player%}
            set {_c2} to {edit.corner2::%loop-player%}

            if x-pos of {_c1} is more than x-pos of {_c2}:
                add 0.49 to x-pos of {_c1}
                remove 0.49 from x-pos of {_c2}
            else:
                add 0.49 to x-pos of {_c2}
                remove 0.49 from x-pos of {_c1}

            if y-pos of {_c1} is more than y-pos of {_c2}:
                add 0.49 to y-pos of {_c1}
                remove 0.49 from y-pos of {_c2}
            else:
                add 0.49 to y-pos of {_c2}
                remove 0.49 from y-pos of {_c1}

            if z-pos of {_c1} is more than z-pos of {_c2}:
                add 0.49 to z-pos of {_c1}
                remove 0.49 from z-pos of {_c2}
            else:
                add 0.49 to z-pos of {_c2}
                remove 0.49 from z-pos of {_c1}

            AdminWandRunPos({_c1},"particle %{_particle}% ~ ~ ~ 0 0 0 0 1 force %loop-player%")
            AdminWandRunPos({_c2},"particle %{_particle}% ~ ~ ~ 0 0 0 0 1 force %loop-player%")

            set {_d1} to {_c1}
            set {_d2} to {_c2}
            set {_d3} to {_c1}
            set {_d4} to {_c2}
            set x-pos of {_d1} to (x-pos of {_c1} + x-pos of {_c2}) / 2
            set x-pos of {_d2} to (x-pos of {_c1} + x-pos of {_c2}) / 2
            set x-pos of {_d3} to (x-pos of {_c1} + x-pos of {_c2}) / 2
            set x-pos of {_d4} to (x-pos of {_c1} + x-pos of {_c2}) / 2
            set y-pos of {_d3} to (y-pos of {_c2})
            set y-pos of {_d4} to (y-pos of {_c1})
            set {_ribSize} to (x-pos of {_c1} - x-pos of {_c2})
            set {_p} to floor(abs({_ribSize}))+1
            AdminWandRunPos({_d1},"particle %{_particle}% ~ ~ ~ %{_ribSize}/4% 0 0 0 %{_p}% force %loop-player%")
            AdminWandRunPos({_d2},"particle %{_particle}% ~ ~ ~ %{_ribSize}/4% 0 0 0 %{_p}% force %loop-player%")
            AdminWandRunPos({_d3},"particle %{_particle}% ~ ~ ~ %{_ribSize}/4% 0 0 0 %{_p}% force %loop-player%")
            AdminWandRunPos({_d4},"particle %{_particle}% ~ ~ ~ %{_ribSize}/4% 0 0 0 %{_p}% force %loop-player%")

            set {_d1} to {_c1}
            set {_d2} to {_c2}
            set {_d3} to {_c1}
            set {_d4} to {_c2}
            set z-pos of {_d1} to (z-pos of {_c1} + z-pos of {_c2}) / 2
            set z-pos of {_d2} to (z-pos of {_c1} + z-pos of {_c2}) / 2
            set z-pos of {_d3} to (z-pos of {_c1} + z-pos of {_c2}) / 2
            set Z-pos of {_d4} to (z-pos of {_c1} + z-pos of {_c2}) / 2
            set y-pos of {_d3} to (y-pos of {_c2})
            set y-pos of {_d4} to (y-pos of {_c1})
            set {_ribSize} to (z-pos of {_c1} - z-pos of {_c2})
            set {_p} to floor(abs({_ribSize}/3))+1
            AdminWandRunPos({_d1},"particle %{_particle}% ~ ~ ~ 0 0 %{_ribSize}/4% 0 %{_p}% force %loop-player%")
            AdminWandRunPos({_d2},"particle %{_particle}% ~ ~ ~ 0 0 %{_ribSize}/4% 0 %{_p}% force %loop-player%")
            AdminWandRunPos({_d3},"particle %{_particle}% ~ ~ ~ 0 0 %{_ribSize}/4% 0 %{_p}% force %loop-player%")
            AdminWandRunPos({_d4},"particle %{_particle}% ~ ~ ~ 0 0 %{_ribSize}/4% 0 %{_p}% force %loop-player%")

            set {_d1} to {_c1}
            set {_d2} to {_c2}
            set {_d3} to {_c1}
            set {_d4} to {_c2}
            set y-pos of {_d1} to (y-pos of {_c1} + y-pos of {_c2}) / 2
            set y-pos of {_d2} to (y-pos of {_c1} + y-pos of {_c2}) / 2
            set y-pos of {_d3} to (y-pos of {_c1} + y-pos of {_c2}) / 2
            set y-pos of {_d4} to (y-pos of {_c1} + y-pos of {_c2}) / 2
            set x-pos of {_d3} to (x-pos of {_c2})
            set x-pos of {_d4} to (x-pos of {_c1})
            set {_ribSize} to (y-pos of {_c1} - y-pos of {_c2})
            set {_p} to floor(abs({_ribSize}))+1
            AdminWandRunPos({_d1},"particle %{_particle}% ~ ~ ~ 0 %{_ribSize}/4% 0 0 %{_p}% force %loop-player%")
            AdminWandRunPos({_d2},"particle %{_particle}% ~ ~ ~ 0 %{_ribSize}/4% 0 0 %{_p}% force %loop-player%")
            AdminWandRunPos({_d3},"particle %{_particle}% ~ ~ ~ 0 %{_ribSize}/4% 0 0 %{_p}% force %loop-player%")
            AdminWandRunPos({_d4},"particle %{_particle}% ~ ~ ~ 0 %{_ribSize}/4% 0 0 %{_p}% force %loop-player%")

function AdminWandRunPos(pos : location,cmd : string):
    command "execute positioned %x-pos of {_pos}% %y-pos of {_pos}% %z-pos of {_pos}% run %{_cmd}%"


command //fluid <number>:
    permission: Admin 
    trigger:
        EditFluid(location of block at player,arg 1)
        
function EditFluid(loc:location,n:number):
    if block at {_loc} is air:
        set block at {_loc} to red glazed terracotta
        wait 1 tick
        if {_n} is more than 1:
            loop all blocks in radius 1.3 of {_loc}:
                if loop-block is air:
                    EditFluid(loop-block,{_n} - 1)